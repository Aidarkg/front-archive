•	ПРО КАЧЕСТВО КОДА В ПРОЕКТЕ

-Папки называть с маленькой буквы, файлы с большой буквы
-Классы в css называть используя CamlCase
- использовать только двойные кавычки “ ”,
- если переменная постоянная, и нигде больше не используется, то использовать const,
- соблюдать табуляцию
- использовать всегда точки с запятой;
- использовать === и !== , вместо == и !=
- не сравненивать переменные с самим собой, такое сравнение обычно является лишним часто ошибочным
- не использовать множество пробелов в коде, кроме некоторых исключений
- не использовать одиночные блок (не оставлять {} пустым)

	РАБОТА С ГИТЛАБ:
1.	Стянуть последние изменения:

        git pull origin dev

2.	Создать новую ветку:

        git checkout -b <моя_новая_ветка/>

Эта команда создаст новую ветку с именем <моя_новая_ветка/> и переключит вас на неё.
3.	Написать код:
Откройте проект в вашем любимом редакторе и внесите нужные изменения, напишите новый код свой
Закинуть изменения на существующий репозиторий:
4.	Добавить изменения для коммита:

        git add .

Эта команда добавит все измененные файлы к подготовленным к коммиту.
5.	Сделать коммит:

        git commit -m "Описание вашего коммита"

Замените "Описание вашего коммита" на описание ваших изменений.
6.	Загрузить изменения на удаленный репозиторий:

        git push origin <моя_новая_ветка/>

Эта команда отправит вашу новую ветку с коммитами на удаленный репозиторий.
Теперь ваша новая ветка с изменениями находится на удаленном репозитории. Эти изменения должны быть включены в другую ветку (dev), нужно создать запрос на слияние на GitLab:
7.	Создать запрос на слияние (Merge Request):
•	Откройте ваш репозиторий на GitLab в браузере.
•	Нажмите на кнопку "Merge Request" или "Создать запрос на слияние".
•	Выберите вашу новую ветку в качестве "Source branch" (исходной ветки).
•	Выберите ветку, в которую вы хотите включить изменения (
dev)
•	Дайте краткое описание изменений.
•	Создайте запрос на слияние.



